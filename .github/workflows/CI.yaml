name: CI

on:
  # The cookiecutter uses the "--initial-branch" flag when it runs git-init
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Weekly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * 0"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [macOS-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        python-version: [3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Install dependencies
        run: |
          uv pip install --system pytest
          uv pip install --system -e .

      # - uses: actions/checkout@v3

      # - name: Additional info about the build
      #   shell: bash
      #   run: |
      #     uname -a
      #     df -h
      #     ulimit -a

      # # More info on options: https://github.com/marketplace/actions/provision-with-micromamba
      # - uses: mamba-org/provision-with-micromamba@main
      #   with:
      #     environment-file: devtools/conda-envs/test_env.yaml
      #     environment-name: test
      #     channels: conda-forge,defaults
      #     extra-specs: |
      #       python=${{ matrix.python-version }}

      # - name: Install package
      #   # conda setup requires this special shell
      #   shell: bash -l {0}
      #   run: |
      #     python -m pip install . --no-deps
      #     micromamba list

      - name: Run tests
        # conda setup requires this special shell
        shell: bash -l {0}
        run: |
          pytest -v --cov=pyGSM --cov-report=xml --color=yes pyGSM/tests/

      - name: CodeCov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
